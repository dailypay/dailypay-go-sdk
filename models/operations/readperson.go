// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/dailypay/dailypay-go-sdk/internal/utils"
	"github.com/dailypay/dailypay-go-sdk/models/components"
)

type ReadPersonGlobals struct {
	// The version of the DailyPay API to use for this request. If not provided, the latest version of the API will be used.
	//
	Version *int64 `default:"3" header:"style=simple,explode=false,name=DailyPay-API-Version"`
}

func (r ReadPersonGlobals) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *ReadPersonGlobals) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (r *ReadPersonGlobals) GetVersion() *int64 {
	if r == nil {
		return nil
	}
	return r.Version
}

type ReadPersonRequest struct {
	// Unique ID of the person
	PersonID string `pathParam:"style=simple,explode=false,name=person_id"`
}

func (r *ReadPersonRequest) GetPersonID() string {
	if r == nil {
		return ""
	}
	return r.PersonID
}

type ReadPersonResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Returns the person object.
	PersonData *components.PersonData
}

func (r *ReadPersonResponse) GetHTTPMeta() components.HTTPMetadata {
	if r == nil {
		return components.HTTPMetadata{}
	}
	return r.HTTPMeta
}

func (r *ReadPersonResponse) GetPersonData() *components.PersonData {
	if r == nil {
		return nil
	}
	return r.PersonData
}
