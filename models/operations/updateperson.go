// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/dailypay/dailypay-go-sdk/internal/utils"
	"github.com/dailypay/dailypay-go-sdk/models/components"
)

type UpdatePersonGlobals struct {
	// The version of the DailyPay API to use for this request. If not provided, the latest version of the API will be used.
	//
	Version *int64 `default:"3" header:"style=simple,explode=false,name=DailyPay-API-Version"`
}

func (u UpdatePersonGlobals) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdatePersonGlobals) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (u *UpdatePersonGlobals) GetVersion() *int64 {
	if u == nil {
		return nil
	}
	return u.Version
}

type UpdatePersonRequest struct {
	// Unique ID of the person
	PersonID   string                     `pathParam:"style=simple,explode=false,name=person_id"`
	PersonData components.PersonDataInput `request:"mediaType=application/vnd.api+json"`
}

func (u *UpdatePersonRequest) GetPersonID() string {
	if u == nil {
		return ""
	}
	return u.PersonID
}

func (u *UpdatePersonRequest) GetPersonData() components.PersonDataInput {
	if u == nil {
		return components.PersonDataInput{}
	}
	return u.PersonData
}

type UpdatePersonResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Returns the person object.
	PersonData *components.PersonData
}

func (u *UpdatePersonResponse) GetHTTPMeta() components.HTTPMetadata {
	if u == nil {
		return components.HTTPMetadata{}
	}
	return u.HTTPMeta
}

func (u *UpdatePersonResponse) GetPersonData() *components.PersonData {
	if u == nil {
		return nil
	}
	return u.PersonData
}
