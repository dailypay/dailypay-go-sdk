// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/dailypay/dailypay-go-sdk/internal/utils"
	"github.com/dailypay/dailypay-go-sdk/models/components"
	"time"
)

type ListPaychecksGlobals struct {
	// The version of the DailyPay API to use for this request. If not provided, the latest version of the API will be used.
	//
	Version *int64 `default:"3" header:"style=simple,explode=false,name=DailyPay-API-Version"`
}

func (l ListPaychecksGlobals) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListPaychecksGlobals) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (l *ListPaychecksGlobals) GetVersion() *int64 {
	if l == nil {
		return nil
	}
	return l.Version
}

type ListPaychecksRequest struct {
	// Limit the results to documents related to a specific job
	FilterJobID *string `queryParam:"style=form,explode=true,name=filter[job.id]"`
	// Limit the results to paychecks with the specified status
	FilterStatus *components.FilterPaycheckStatus `queryParam:"style=form,explode=true,name=filter[status]"`
	// Limit the results to paychecks with deposit_expected_at greater than or equal to the specified date
	FilterDepositExpectedAtGte *time.Time `queryParam:"style=form,explode=true,name=filter[deposit_expected_at__gte]"`
	// Limit the results to paychecks with deposit_expected_at less than the specified date
	FilterDepositExpectedAtLt *time.Time `queryParam:"style=form,explode=true,name=filter[deposit_expected_at__lt]"`
	// Limit the results to paychecks with pay_period_ends_at greater than or equal to the specified date
	FilterPayPeriodEndsAtGte *time.Time `queryParam:"style=form,explode=true,name=filter[pay_period_ends_at__gte]"`
	// Limit the results to paychecks with pay_period_ends_at less than the specified date
	FilterPayPeriodEndsAtLt *time.Time `queryParam:"style=form,explode=true,name=filter[pay_period_ends_at__lt]"`
	// Limit the results to paychecks with pay_period_starts_at greater than or equal to the specified date
	FilterPayPeriodStartsAtGte *time.Time `queryParam:"style=form,explode=true,name=filter[pay_period_starts_at__gte]"`
	// Limit the results to paychecks with pay_period_starts_at less than the specified date
	FilterPayPeriodStartsAtLt *time.Time `queryParam:"style=form,explode=true,name=filter[pay_period_starts_at__lt]"`
	// Deprecated: This will be removed in a future release, please migrate away from it as soon as possible.
	FilterBy *string `queryParam:"style=form,explode=true,name=filter"`
}

func (l ListPaychecksRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListPaychecksRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (l *ListPaychecksRequest) GetFilterJobID() *string {
	if l == nil {
		return nil
	}
	return l.FilterJobID
}

func (l *ListPaychecksRequest) GetFilterStatus() *components.FilterPaycheckStatus {
	if l == nil {
		return nil
	}
	return l.FilterStatus
}

func (l *ListPaychecksRequest) GetFilterDepositExpectedAtGte() *time.Time {
	if l == nil {
		return nil
	}
	return l.FilterDepositExpectedAtGte
}

func (l *ListPaychecksRequest) GetFilterDepositExpectedAtLt() *time.Time {
	if l == nil {
		return nil
	}
	return l.FilterDepositExpectedAtLt
}

func (l *ListPaychecksRequest) GetFilterPayPeriodEndsAtGte() *time.Time {
	if l == nil {
		return nil
	}
	return l.FilterPayPeriodEndsAtGte
}

func (l *ListPaychecksRequest) GetFilterPayPeriodEndsAtLt() *time.Time {
	if l == nil {
		return nil
	}
	return l.FilterPayPeriodEndsAtLt
}

func (l *ListPaychecksRequest) GetFilterPayPeriodStartsAtGte() *time.Time {
	if l == nil {
		return nil
	}
	return l.FilterPayPeriodStartsAtGte
}

func (l *ListPaychecksRequest) GetFilterPayPeriodStartsAtLt() *time.Time {
	if l == nil {
		return nil
	}
	return l.FilterPayPeriodStartsAtLt
}

func (l *ListPaychecksRequest) GetFilterBy() *string {
	if l == nil {
		return nil
	}
	return l.FilterBy
}

type ListPaychecksResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Returns the paycheck object.
	PaychecksData *components.PaychecksData
}

func (l *ListPaychecksResponse) GetHTTPMeta() components.HTTPMetadata {
	if l == nil {
		return components.HTTPMetadata{}
	}
	return l.HTTPMeta
}

func (l *ListPaychecksResponse) GetPaychecksData() *components.PaychecksData {
	if l == nil {
		return nil
	}
	return l.PaychecksData
}
