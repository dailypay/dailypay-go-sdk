// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/dailypay/dailypay-go-sdk/internal/utils"
	"github.com/dailypay/dailypay-go-sdk/models/components"
)

type ListTransfersGlobals struct {
	// The version of the DailyPay API to use for this request. If not provided, the latest version of the API will be used.
	//
	Version *int64 `default:"3" header:"style=simple,explode=false,name=DailyPay-API-Version"`
}

func (l ListTransfersGlobals) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListTransfersGlobals) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (l *ListTransfersGlobals) GetVersion() *int64 {
	if l == nil {
		return nil
	}
	return l.Version
}

type ListTransfersRequest struct {
	// Limit the results to documents related to a specific person
	FilterPersonID *string `queryParam:"style=form,explode=true,name=filter[person.id]"`
	// Add related resources to the response.
	//
	// The value of the include parameter must be a comma-separated (U+002C COMMA, “,”) list of relationship paths.
	//
	Include *string `queryParam:"style=form,explode=true,name=include"`
	// Deprecated: This will be removed in a future release, please migrate away from it as soon as possible.
	FilterBy *string `queryParam:"style=form,explode=true,name=filter"`
}

func (l *ListTransfersRequest) GetFilterPersonID() *string {
	if l == nil {
		return nil
	}
	return l.FilterPersonID
}

func (l *ListTransfersRequest) GetInclude() *string {
	if l == nil {
		return nil
	}
	return l.Include
}

func (l *ListTransfersRequest) GetFilterBy() *string {
	if l == nil {
		return nil
	}
	return l.FilterBy
}

type ListTransfersResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of transfer objects.
	TransfersData *components.TransfersData
}

func (l *ListTransfersResponse) GetHTTPMeta() components.HTTPMetadata {
	if l == nil {
		return components.HTTPMetadata{}
	}
	return l.HTTPMeta
}

func (l *ListTransfersResponse) GetTransfersData() *components.TransfersData {
	if l == nil {
		return nil
	}
	return l.TransfersData
}
