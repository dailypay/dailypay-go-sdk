// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/dailypay/dailypay-go-sdk/internal/utils"
)

// Data - A job describes the financial relationship between a person and an organization.
type Data struct {
	type_      string              `const:"jobs" json:"type"`
	ID         string              `json:"id"`
	Attributes *JobAttributesInput `json:"attributes,omitempty"`
	// The relationships between the job and other resources, including the accounts to which paychecks from this job are deposited.
	Relationships *JobRelationshipsInput `json:"relationships,omitempty"`
}

func (d Data) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *Data) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, []string{"type", "id"}); err != nil {
		return err
	}
	return nil
}

func (d *Data) GetType() string {
	return "jobs"
}

func (d *Data) GetID() string {
	if d == nil {
		return ""
	}
	return d.ID
}

func (d *Data) GetAttributes() *JobAttributesInput {
	if d == nil {
		return nil
	}
	return d.Attributes
}

func (d *Data) GetRelationships() *JobRelationshipsInput {
	if d == nil {
		return nil
	}
	return d.Relationships
}

type JobUpdateData struct {
	// A job describes the financial relationship between a person and an organization.
	Data Data `json:"data"`
}

func (j *JobUpdateData) GetData() Data {
	if j == nil {
		return Data{}
	}
	return j.Data
}
